{"version":3,"sources":["youtube.svg","spotify.svg","download.svg","LinksContainer.jsx","EpisodeCard.jsx","EpisodesList.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["LinksContainer","props","youtubeLink","bind","link","callback","window","location","href","this","onMouseLeave","episodeFeed","mp3","wipFunction","className","youtube","target","src","youtubeImage","alt","spotify","spotifyImage","downloadImage","onClick","Component","EpisodeCard","state","shownLinks","displayLinks","hideLinks","convertDate","convertDuration","date","dateArray","split","parseInt","duration","durationArray","map","item","pluralHour","pluralMinute","setState","e","preventDefault","alert","episode","cover","created_at","title","description","slice","indexOf","feed","EpisodesList","podcastData","episodes","id","App","fetchFlow","fetchDone","undefined","a","myObject","method","headers","body","JSON","stringify","fetch","response","json","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAAe,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,qC,OCKpBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,YAAc,EAAKA,YAAYC,KAAjB,gBAFF,E,+CAIrB,SAAYC,GACV,MAAM,mCAAN,OAA0CA,K,yBAG5C,SAAYA,EAAMC,GAChB,OAAIA,EACKC,OAAOC,SAASC,KAAKH,EAASD,IAE9BE,OAAOC,SAASC,KAAKJ,I,oBAMhC,WACE,MAAwDK,KAAKR,MAArDS,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,YAAaC,EAAnC,EAAmCA,IAAKC,EAAxC,EAAwCA,YAExC,OACI,sBAAKC,UAAU,kBAAkBJ,aAAcA,EAA/C,UACE,oBAAGF,KAAMC,KAAKP,YAAYS,EAAYI,SAAUC,OAAO,SACrDF,UAAU,0CADZ,UAEI,qBAAKA,UAAU,gBAAgBG,IAAKC,EAAcC,IAAI,KAF1D,cAIA,oBAAGX,KAAMG,EAAYS,QAASJ,OAAO,SAASF,UAAU,0CAAxD,UACE,qBAAKA,UAAU,gBAAgBG,IAAKI,EAAcF,IAAI,KADxD,aAGA,oBAAGX,KAAMI,EAAKI,OAAO,SAASF,UAAU,0CAAxC,UAAkF,qBAAKA,UAAU,iBAAiBG,IAAKK,EAAeH,IAAI,KAA1I,YACA,mBAAGI,QAASV,EAAaC,UAAU,qBAAnC,6B,GAhCoCU,aCFvBC,E,kDACnB,WAAYxB,GAAQ,IAAD,8BACjB,cAAMA,IACDyB,MAAQ,CACXC,YAAY,GAEd,EAAKC,aAAe,EAAKA,aAAazB,KAAlB,gBACpB,EAAK0B,UAAY,EAAKA,UAAU1B,KAAf,gBACjB,EAAK2B,YAAc,EAAKA,YAAY3B,KAAjB,gBACnB,EAAK4B,gBAAkB,EAAKA,gBAAgB5B,KAArB,gBARN,E,+CAWnB,SAAY6B,GACZ,IAAMC,EAAaD,EAAKE,MAAM,KAAK,GAAIA,MAAM,KAC7C,OAAQD,EAAU,IAChB,IAAI,KACFA,EAAU,GAAK,UACf,MACF,IAAI,KACFA,EAAU,GAAK,YACf,MACF,IAAI,KACFA,EAAU,GAAK,WACf,MACF,IAAI,KACFA,EAAU,GAAK,QACf,MACF,IAAI,KACFA,EAAU,GAAK,OACf,MACF,IAAI,KACFA,EAAU,GAAK,QACf,MACF,IAAI,KACFA,EAAU,GAAK,QACf,MACF,IAAI,KACFA,EAAU,GAAK,SACf,MACF,IAAI,KACFA,EAAU,GAAK,WACf,MACF,IAAI,KACFA,EAAU,GAAK,UACf,MACF,IAAI,KACFA,EAAU,GAAK,WACf,MACF,IAAI,KACFA,EAAU,GAAK,WAKnB,MAAM,GAAN,OAAUE,SAASF,EAAU,IAA7B,eAAuCA,EAAU,GAAjD,eAA0DA,EAAU,M,6BAGpE,SAAgBG,GAChB,IAAMC,EAAgBD,EAASF,MAAM,KAAKI,KAAK,SAAAC,GAAI,OAAIJ,SAASI,MAC5DC,EAAa,GACbC,EAAe,GAOnB,OANIJ,EAAc,GAAK,IACrBG,EAAa,KAEXH,EAAc,GAAK,IACrBI,EAAe,KAEX,GAAN,OAASJ,EAAc,GAAvB,gBAAiCG,EAAjC,cAAiDH,EAAc,GAA/D,kBAA2EI,K,0BAG3E,WACEhC,KAAKiC,SAAS,CACZf,YAAY,M,uBAIhB,WACElB,KAAKiC,SAAS,CACZf,YAAY,M,yBAKhB,SAAYgB,GACVA,EAAEC,iBACFC,MAAM,uF,oBAIR,WACE,IAAQC,EAAYrC,KAAKR,MAAjB6C,QACR,OACE,qBAAIhC,UAAU,2BAAd,UACE,qBAAKA,UAAU,oBAAoBK,IAAI,YAAYF,IAAK6B,EAAQC,QAChE,sBAAKjC,UAAU,4BAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,oBAAGA,UAAU,eAAb,UACGL,KAAKsB,gBAAgBe,EAAQV,UADhC,iBAGG3B,KAAKqB,YAAYgB,EAAQE,iBAG9B,6BAAKF,EAAQG,MAAMf,MAAM,OAAO,KARlC,IASE,6BAAKY,EAAQI,cACb,oBAAGpC,UAAU,kBAAb,UACIgC,EAAQG,MAAME,MAAML,EAAQG,MAAMG,QAAQ,KAAK,GADnD,OAGC,mBAAGtC,UAAU,gCAAgCS,QAASd,KAAKI,YAA3D,sBACD,wBACEC,UAAU,qCACVS,QAASd,KAAKmB,aAFhB,oBAKCnB,KAAKiB,MAAMC,YAAc,cAAC,EAAD,CACIhB,YAAamC,EAAQO,KACrBzC,IAAKkC,EAAQlC,IACbF,aAAcD,KAAKoB,UACnBhB,YAAaJ,KAAKI,wB,GArHjBW,aCApB8B,E,kDACnB,aAAe,wC,+CAGf,SAAYX,GACVA,EAAEC,iBACFC,MAAM,uF,oBAGR,WACE,IAAOU,EAAe9C,KAAKR,MAApBsD,YACP,OACE,qBAAIzC,UAAU,gBAAd,UACGyC,EAAYC,SAASlB,KAAI,SAACQ,GAAD,OAAa,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQW,OACnF,oBAAI3C,UAAU,6BAA6BS,QAASd,KAAKI,YAAzD,SACE,mBAAGC,UAAU,oDAAb,6BAEF,oBAAIA,UAAU,+BACd,oBAAIA,UAAU,+BACd,oBAAIA,UAAU,sC,GAnBoBU,aCCrBkC,G,wDACnB,aAAgB,IAAD,8BACb,gBACKC,UAAa,EAAKA,UAAUxD,KAAf,gBAClB,EAAKuB,MAAQ,CACXkC,WAAW,EACXL,YAAa,CACXC,cAAUK,IAND,E,oFAWf,gCAAAC,EAAA,4DACkB,qEACVC,EAAW,CACfC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CAAC,OAAS,CAAC,OAAS,eAL7C,SAQyBC,MAPP,qEAOsBN,GARxC,cAQQO,EARR,gBASqBA,EAASC,OAT9B,OASQC,EATR,OAUE/D,KAAKiC,SAAS,CAAEa,YAAaiB,EAAMZ,WAAW,IAVhD,gD,qFAcD,WACGnD,KAAKkD,c,oBAEP,WACE,IAAQJ,EAAgB9C,KAAKiB,MAArB6B,YACR,OACE,8BACG9C,KAAKiB,MAAMkC,WAAa,cAAC,EAAD,CAAcL,YAAcA,U,GAjC5B/B,cCQlBiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAE1Bb,M","file":"static/js/main.85818c66.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/youtube.d848eaf3.svg\";","export default __webpack_public_path__ + \"static/media/spotify.d5fd0805.svg\";","export default __webpack_public_path__ + \"static/media/download.f88299f6.svg\";","import React, { Component } from 'react'\nimport youtubeImage from './youtube.svg'\nimport spotifyImage from './spotify.svg'\nimport downloadImage from './download.svg'\n\nexport default class LinksContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.youtubeLink = this.youtubeLink.bind(this)\n}\nyoutubeLink(link) {\n  return `https://www.youtube.com/watch?v=${link}`\n}\n\nlinkHandler(link, callback) {\n  if (callback) {\n    return window.location.href(callback(link))\n  } else {\n    return window.location.href=link;\n  }\n}\n\n\n\nrender() {\n  const { onMouseLeave, episodeFeed, mp3, wipFunction } = this.props\n  \n  return (\n      <div className='links-container' onMouseLeave={onMouseLeave}>\n        <a href={this.youtubeLink(episodeFeed.youtube)} target='_blank' \n          className=\"btn-class btn-float--hover btn-gradient\">\n            <img className='link__youtube' src={youtubeImage} alt=\"\" /> youtube\n        </a>\n        <a href={episodeFeed.spotify} target='_blank' className=\"btn-class btn-float--hover btn-gradient\">\n          <img className='link__spotify' src={spotifyImage} alt=\"\" />spotify\n        </a>\n        <a href={mp3} target='_blank' className=\"btn-class btn-float--hover btn-gradient\"><img className='link__download' src={downloadImage} alt=\"\" />baixar</a>\n        <a onClick={wipFunction} className=\"btn-class text-btn\">ver mais</a>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport LinksContainer from './LinksContainer.jsx'\n\nexport default class EpisodeCard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      shownLinks: false,\n    }\n    this.displayLinks = this.displayLinks.bind(this)\n    this.hideLinks = this.hideLinks.bind(this)\n    this.convertDate = this.convertDate.bind(this)\n    this.convertDuration = this.convertDuration.bind(this)\n  }\n\n  convertDate(date){ /*Change date format from YYYY:MM:DD to 'D of M of Y'*/\n  const dateArray = (date.split(\"T\")[0]).split(\"-\")\n  switch (dateArray[1]) {\n    case `01`:\n      dateArray[1] = 'Janeiro'\n      break;\n    case `02`:\n      dateArray[1] = 'Fevereiro'\n      break;\n    case `03`:\n      dateArray[1] = 'Março'\n      break;\n    case `04`:\n      dateArray[1] = 'Abril'\n      break;\n    case `05`:\n      dateArray[1] = 'Maio'\n      break;\n    case `06`:\n      dateArray[1] = 'Junho'\n      break;\n    case `07`:\n      dateArray[1] = 'Julho'\n      break;\n    case `08`:\n      dateArray[1] = 'Agosto'\n      break;\n    case `09`:\n      dateArray[1] = 'Setembro'\n      break;\n    case `10`:\n      dateArray[1] = 'Outubro'\n      break;\n    case `11`:\n      dateArray[1] = 'Novembro'\n      break;\n    case `12`:\n      dateArray[1] = 'Dezembro'\n      break;\n    default:\n      break;\n  }\n  return `${parseInt(dateArray[2])} de ${dateArray[1]} de ${dateArray[0]}`\n}\n\n  convertDuration(duration) { /*Change duration format from HH:MM:SS to 'HH hours and MM minutes'*/\n  const durationArray = duration.split(\":\").map( item => parseInt(item));\n  let pluralHour = ''\n  let pluralMinute = ''\n  if (durationArray[0] > 1) {\n    pluralHour = 's'\n  }\n  if (durationArray[1] > 1) {\n    pluralMinute = 's'\n  }\n  return`${durationArray[0]} hora${pluralHour} e ${durationArray[1]} minuto${pluralMinute}`\n}\n\n  displayLinks(){\n    this.setState({\n      shownLinks: true,\n    })\n  }\n\n  hideLinks(){\n    this.setState({\n      shownLinks: false,\n    })\n  \n  }\n\n  wipFunction(e) {\n    e.preventDefault()\n    alert(`Obrigado pro testar o MVP.\nEssa funcionalidade ainda está em desenvolvimento.`)\n  }\n\n  render() {\n    const { episode } = this.props;\n    return (\n      <li className=\"episode-card flex-column\">\n        <img className='episode-card__img' alt='thumbnail' src={episode.cover}/>\n        <div className='episode__info flex-column'>\n          <div className='flex-row episode__time-info'>\n            <p className='is--overline'>\n              {this.convertDuration(episode.duration)}\n              &nbsp;•&nbsp;\n              {this.convertDate(episode.created_at)}\n            </p>\n          </div>\n          <h2>{episode.title.split(\" - \")[0]}</h2> {/*Split method added to remove extra text from title*/}\n          <h3>{episode.description}</h3>\n          <p className='episode__number'>\n            { episode.title.slice(episode.title.indexOf('#')+1)} {/*Extra method added to slice episode # out of text*/}\n          </p>\n           <a className='episode__comment-btn text-btn' onClick={this.wipFunction}>COMENTAR</a>\n          <button \n            className='episode__play-btn btn-float--hover'\n            onClick={this.displayLinks}>\n              &#9654;\n          </button>\n          {this.state.shownLinks && <LinksContainer \n                                        episodeFeed={episode.feed} \n                                        mp3={episode.mp3} \n                                        onMouseLeave={this.hideLinks} \n                                        wipFunction={this.wipFunction}\n                                    />}\n        </div>\n      </li>\n    )\n  }\n}","import React, { Component } from 'react'\nimport EpisodeCard from './EpisodeCard';\n\nexport default class EpisodesList extends Component {\n  constructor() {\n    super()\n  }\n  wipFunction(e) {\n    e.preventDefault()\n    alert(`Obrigado pro testar o MVP.\nEssa funcionalidade ainda está em desenvolvimento.`)\n  }\n  render() {\n    const {podcastData} = this.props\n    return (\n      <ol className='episodes-list'>\n        {podcastData.episodes.map((episode) => <EpisodeCard episode={episode} key={episode.id} />)}\n        <li className=\"filling-empty-space-childs\" onClick={this.wipFunction}>\n          <p className='btn-class btn-gradient load-more btn-float--hover'>carregar mais</p>\n        </li>\n        <li className=\"filling-empty-space-childs\"></li>\n        <li className=\"filling-empty-space-childs\"></li>\n        <li className=\"filling-empty-space-childs\"></li>\n      </ol>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport EpisodesList from './EpisodesList';\nimport './App.css'\n\nexport default class App extends Component {\n  constructor () {\n    super()\n    this.fetchFlow =  this.fetchFlow.bind(this)\n    this.state = {\n      fetchDone: false,\n      podcastData: {\n        episodes: undefined,\n      }\n    }\n  }\n  \n  async fetchFlow(){\n    const API_URL = 'https://flow3r-api-master-2eqj3fl3la-ue.a.run.app/v2/episodes/list';\n    const myObject = {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\"params\":{\"filter\":\"episodes\"}}),\n    };\n\n    const response = await fetch(API_URL, myObject);\n    const data = await response.json();\n    this.setState({ podcastData: data, fetchDone: true });\n\n  };\n  \n componentDidMount() {\n    this.fetchFlow()\n  }\n  render() {  \n    const { podcastData } = this.state\n    return (\n      <div>\n        {this.state.fetchDone && <EpisodesList podcastData={ podcastData }/>}\n      </div>\n    )\n  }\n}\n\n\n// Salve Hugo!\n// Temos uma API pra cada criador de conteúdo que retorna a listagem de episódio\n// METHOD POST https://flow3r-api-master-2eqj3fl3la-ue.a.run.app/v2/episodes/list?creator_profile_name=venuspodcast\n\n// BODY:\n// {\"params\":{\"filter\":\"episodes\"}}\n// caso envie sem o creator_profile_name, pega o do flow\n// pra fazer a paginação, vc pode enviar o seguinte body\n// {\"params\":{\"filter\":\"episodes\",\"paging\":{\"previous\":null,\"next\":\"2021-05-18T17:00:00-03:00\"}}}\n// sendo params.paging.next o valor que retornou na resposta anterior","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}